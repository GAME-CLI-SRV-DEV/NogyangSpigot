From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Outfit8TSB <sunnybunnies09@naver.com>
Date: Tue, 23 Apr 2021 08:51:00 +0900
Subject: [PATCH] Build changes


diff --git a/build.gradle.kts b/build.gradle.kts
index ce3747d8d2a8f4327766cf23d5aaa72cfcb380bc..aad3e5b646413355d9ab0885c18bcb2f20018d19 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -12,9 +12,42 @@ configurations.named(log4jPlugins.compileClasspathConfigurationName) {
 }
 val alsoShade: Configuration by configurations.creating

+val extraRuntime: Configuration by configurations.creating
+configurations.runtimeClasspath {
+    extendsFrom(extraRuntime)
+}
+repositories {
+    maven {
+        url = uri("https://maven.lenni0451.net/everything") //viabedrock
+    }
+
+    maven {
+        url = uri("https://repo.viaversion.com") //viaversion
+    }
+
+    maven {
+        url = uri("https://repo.opencollab.dev/maven-snapshots")
+    }
+
+    maven("https://s01.oss.sonatype.org/content/repositories/snapshots/") {
+        mavenContent {
+            snapshotsOnly()
+            includeGroup("net.kyori")
+        }
+    }
+}
+
 dependencies {
-    implementation(project(":paper-api"))
-    implementation(project(":paper-mojangapi"))
+    implementation(project(":NogyangSpigot-api"))
+    implementation(project(":NogyangSpigot-mojangapi"))
+       // NogyangSpigot Start
+          compileOnly("org.geysermc.cumulus:cumulus:2.0.0-SNAPSHOT")
+          compileOnly("org.geysermc.floodgate:api:2.2.2-SNAPSHOT")
+          compileOnly("com.viaversion:viaversion-api:4.9.2")
+    implementation("net.raphimc:ViaLegacy:2.2.22-SNAPSHOT") // classic servers
+    implementation("net.raphimc:ViaAprilFools:2.0.11-SNAPSHOT") // April Fools!
+    implementation("net.raphimc:ViaBedrock:0.0.5-SNAPSHOT") // Geyser old to latest
+    // NogyangSpigot End
     // Paper start
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -70,7 +104,7 @@ tasks.jar {
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
             "Implementation-Title" to "CraftBukkit",
-            "Implementation-Version" to "git-Paper-$implementationVersion",
+            "Implementation-Version" to "git-NogyangSpigot-$implementationVersion",
             "Implementation-Vendor" to date, // Paper
             "Specification-Title" to "Bukkit",
             "Specification-Version" to project.version,
@@ -154,7 +188,7 @@ fun TaskContainer.registerRunTask(
     name: String,
     block: JavaExec.() -> Unit
 ): TaskProvider<JavaExec> = register<JavaExec>(name) {
-    group = "paper"
+    group = "paperweight"
     mainClass.set("org.bukkit.craftbukkit.Main")
     standardInput = System.`in`
     workingDir = rootProject.layout.projectDirectory
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1855,7 +1855,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa

     @DontObfuscate
     public String getServerModName() {
-        return "Paper"; // Paper
+        return "NogyangSpigot"; // NogyangSpigot - NogyangSpigot > // Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
     }

     public SystemReport fillSystemReport(SystemReport details) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 9f7ed3374..6a3ac6cc0 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -266,7 +266,7 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper

 public final class CraftServer implements Server {
-    private final String serverName = "Paper"; // Paper
+    private final String serverName = "NogyangSpigot"; // NogyangSpigot
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
@@ -1132,10 +1132,10 @@ public final class CraftServer implements Server {
         for (BukkitWorker worker : overdueWorkers) {
             Plugin plugin = worker.getOwner();
             getLogger().log(Level.SEVERE, String.format(
-                "Nag author(s): '%s' of '%s' about the following: %s",
+                "Do Not Nag author(s): '%s' of '%s' about the following: %s",
                 plugin.getPluginMeta().getAuthors(),
                 plugin.getPluginMeta().getDisplayName(),
-                "This plugin is not properly shutting down its async tasks when it is being shut down. This task may throw errors during the final shutdown logs and might not complete before process dies."
+                "This plugin is not properly shutting down its async tasks when it is being shut down. This task may throw errors during the final shutdown logs and might not complete before process dies. This Is Not A Plugin Bug or Crash."
             ));
         }
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 774556a62..0372761d3 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -9,9 +9,9 @@ import org.bukkit.Bukkit;

 public final class Versioning {
     public static String getBukkitVersion() {
-        String result = "Unknown-Version";
+        String result = "weak-trembling-fortress"; // Unknown-Version? Nah, More Like Weak Trembling Fortress by Team No Name.

-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/io.papermc.paper/paper-api/pom.properties");
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/kr.ms.nogyang.nogyangspigot/NogyangSpigot-api/pom.properties");
         Properties properties = new Properties();

         if (stream != null) {
@@ -20,7 +20,7 @@ public final class Versioning {

                 result = properties.getProperty("version");
             } catch (IOException ex) {
-                Logger.getLogger(Versioning.class.getName()).log(Level.SEVERE, "Could not get Bukkit version!", ex);
+                Logger.getLogger(Versioning.class.getName()).log(Level.SEVERE, "Could not get Bukkit version! did it go to Tiny Loser Chamber?", ex);
             }
         }
diff --git a/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java b/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java
index b5c594a5499556ad452d9939c75e150af8252e90..b51687f52d4926d7696ca93115682b31abdde3d8 100644
--- a/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java
+++ b/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java
@@ -7,7 +7,7 @@ import org.bukkit.entity.Mob;
 /**
  * Wraps vanilla in api
  */
-public class PaperVanillaGoal<T extends Mob> implements VanillaGoal<T> {
+public class PaperVanillaGoal<T extends Mob> {

     private final Goal handle;
     private final GoalKey<T> key;
@@ -24,37 +24,30 @@ public class PaperVanillaGoal<T extends Mob> implements VanillaGoal<T> {
         return handle;
     }

-    @Override
     public boolean shouldActivate() {
         return handle.canUse();
     }

-    @Override
     public boolean shouldStayActive() {
         return handle.canContinueToUse();
     }

-    @Override
     public void start() {
         handle.start();
     }

-    @Override
     public void stop() {
         handle.stop();
     }

-    @Override
     public void tick() {
         handle.tick();
     }

-    @Override
     public GoalKey<T> getKey() {
         return key;
     }

-    @Override
     public EnumSet<GoalType> getTypes() {
         return types;
     }
