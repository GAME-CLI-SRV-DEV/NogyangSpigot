From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Outfit8TSB <sunnybunnies09@naver.com>
Date: Tue, 23 Apr 2021 08:51:00 +0900
Subject: [PATCH] Build changes

diff --git a/build.gradle.kts b/build.gradle.kts
index 4998aff0b..01bf860ad 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -12,9 +12,42 @@ configurations.named(log4jPlugins.compileClasspathConfigurationName) {
 }
 val alsoShade: Configuration by configurations.creating

+val extraRuntime: Configuration by configurations.creating
+configurations.runtimeClasspath {
+    extendsFrom(extraRuntime)
+}
+repositories {
+    maven {
+        url = uri("https://maven.lenni0451.net/everything") // viabedrock
+    }
+
+    maven {
+        url = uri("https://repo.viaversion.com") // viaversion
+    }
+
+    maven {
+        url = uri("https://repo.opencollab.dev/maven-snapshots") // GeyserMC
+    }
+
+    maven("https://s01.oss.sonatype.org/content/repositories/snapshots/") {
+        mavenContent {
+            snapshotsOnly()
+            includeGroup("net.kyori")
+        }
+    }
+}
+
 dependencies {
-    implementation(project(":paper-api"))
+    implementation(project(":NogyangSpigot-api"))
     // Paper start
+       +       // NogyangSpigot Start
+          compileOnly("org.geysermc.cumulus:cumulus:2.0.0-SNAPSHOT")
+          compileOnly("org.geysermc.floodgate:api:2.2.2-SNAPSHOT")
+          compileOnly("com.viaversion:viaversion-api:4.9.2")
+    implementation("net.raphimc:ViaLegacy:2.2.22-SNAPSHOT") // classic servers
+    implementation("net.raphimc:ViaAprilFools:2.0.11-SNAPSHOT") // April Fools!
+    implementation("net.raphimc:ViaBedrock:0.0.5-SNAPSHOT") // Geyser old to latest
+    // NogyangSpigot End
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
     implementation("net.kyori:adventure-text-serializer-ansi:4.17.0") // Keep in sync with adventureVersion from Paper-API build file
@@ -144,7 +177,7 @@ fun TaskContainer.registerRunTask(
     name: String,
     block: JavaExec.() -> Unit
 ): TaskProvider<JavaExec> = register<JavaExec>(name) {
-    group = "paper"
+    group = "paperweight"
     mainClass.set("org.bukkit.craftbukkit.Main")
     standardInput = System.`in`
     workingDir = rootProject.layout.projectDirectory
diff --git a/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java b/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java
index b5c594a54..ad4f65813 100644
--- a/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java
+++ b/src/main/java/com/destroystokyo/paper/entity/ai/PaperVanillaGoal.java
@@ -24,37 +24,30 @@ public class PaperVanillaGoal<T extends Mob> implements VanillaGoal<T> {
         return handle;
     }

-    @Override
     public boolean shouldActivate() {
         return handle.canUse();
     }

-    @Override
     public boolean shouldStayActive() {
         return handle.canContinueToUse();
     }

-    @Override
     public void start() {
         handle.start();
     }

-    @Override
     public void stop() {
         handle.stop();
     }

-    @Override
     public void tick() {
         handle.tick();
     }

-    @Override
     public GoalKey<T> getKey() {
         return key;
     }

-    @Override
     public EnumSet<GoalType> getTypes() {
         return types;
     }
